<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paintee.common.repository.mapper.LoginMapper" >
  <resultMap id="BaseResultMap" type="com.paintee.common.repository.entity.Login" >
    <id column="seq" property="seq" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="hash" property="hash" jdbcType="VARCHAR" />
    <result column="expire_date" property="expireDate" jdbcType="DATE" />
    <result column="access_gubun" property="accessGubun" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    seq, user_id, hash, expire_date, access_gubun
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.paintee.common.repository.entity.LoginExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_login
    where seq = #{seq,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_login
    where seq = #{seq,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.paintee.common.repository.entity.LoginExample" >
    delete from tb_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.paintee.common.repository.entity.Login" >
    <selectKey resultType="java.lang.Integer" keyProperty="seq" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_login (user_id, hash, expire_date, 
      access_gubun)
    values (#{userId,jdbcType=VARCHAR}, #{hash,jdbcType=VARCHAR}, #{expireDate,jdbcType=DATE}, 
      #{accessGubun,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.paintee.common.repository.entity.Login" >
    <selectKey resultType="java.lang.Integer" keyProperty="seq" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="hash != null" >
        hash,
      </if>
      <if test="expireDate != null" >
        expire_date,
      </if>
      <if test="accessGubun != null" >
        access_gubun,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="hash != null" >
        #{hash,jdbcType=VARCHAR},
      </if>
      <if test="expireDate != null" >
        #{expireDate,jdbcType=DATE},
      </if>
      <if test="accessGubun != null" >
        #{accessGubun,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.paintee.common.repository.entity.LoginExample" resultType="java.lang.Integer" >
    select count(*) from tb_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_login
    <set >
      <if test="record.seq != null" >
        seq = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.hash != null" >
        hash = #{record.hash,jdbcType=VARCHAR},
      </if>
      <if test="record.expireDate != null" >
        expire_date = #{record.expireDate,jdbcType=DATE},
      </if>
      <if test="record.accessGubun != null" >
        access_gubun = #{record.accessGubun,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_login
    set seq = #{record.seq,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      hash = #{record.hash,jdbcType=VARCHAR},
      expire_date = #{record.expireDate,jdbcType=DATE},
      access_gubun = #{record.accessGubun,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.paintee.common.repository.entity.Login" >
    update tb_login
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="hash != null" >
        hash = #{hash,jdbcType=VARCHAR},
      </if>
      <if test="expireDate != null" >
        expire_date = #{expireDate,jdbcType=DATE},
      </if>
      <if test="accessGubun != null" >
        access_gubun = #{accessGubun,jdbcType=CHAR},
      </if>
    </set>
    where seq = #{seq,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.paintee.common.repository.entity.Login" >
    update tb_login
    set user_id = #{userId,jdbcType=VARCHAR},
      hash = #{hash,jdbcType=VARCHAR},
      expire_date = #{expireDate,jdbcType=DATE},
      access_gubun = #{accessGubun,jdbcType=CHAR}
    where seq = #{seq,jdbcType=INTEGER}
  </update>
</mapper>